{"version":3,"sources":["stores.js","components/FilterButton/FilterButton.js","components/SearchBar/SearchBar.js","components/FilterButton/constants.js","components/ResultTable/ResultTableHead.js","utilities.js","components/ResultTable/ResultTable.js","components/GenreItem/GenreItem.js","components/GenreSelection/GenreSelection.js","app-config.js","pages/HomePage/HomePage.js","pages/LoginPage/LoginPage.js","components/HeaderAppBar/HeaderAppBar.js","App.js","serviceWorker.js","index.js"],"names":["authenticationStore","observable","userLevel","token","setUserLevel","action","newVal","setToken","DataStore","title","rating","imdb","year","genres","fsk","this","decorate","setTitle","setRating","setIMDb","setYear","setGenres","setFSK","dataStore","FilterButton","state","selection","handleChange","event","_this","setState","target","value","props","dataStoreAction","react_default","a","createElement","TextField","select","className","label","onChange","MenuItem","key","children","map","name","React","Component","SearchBar","handleTitleInput","handleEnterKey","type","onSearchClick","index_es","autoFocus","id","onKeyDown","variant","color","onClick","Search_default","getRangeValues","start","end","steps","fraction","arguments","length","undefined","elements","i","push","toFixed","RATINGS","IMDB_RATINGS","YEARS","FSK","rows","numeric","disablePadding","ResultTableHead","createSortHandler","property","onRequestSort","_this2","_this$props","order","orderBy","TableHead","TableRow","row","TableCell","align","padding","sortDirection","Tooltip","placement","enterDelay","TableSortLabel","active","direction","desc","b","ResultTable","page","rowsPerPage","handleRequestSort","handleClick","url","window","open","handleChangePage","handleChangeRowsPerPage","_this$state","data","emptyRows","Math","min","Paper","Toolbar","Typography","Table","aria-labelledby","ResultTable_ResultTableHead","rowCount","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","n","hover","tabIndex","movie_id","component","scope","join","style","height","colSpan","TablePagination","rowsPerPageOptions","count","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","GenreItem","selected","handleSelection","FormControlLabel_default","control","Checkbox_default","checked","GenreSelection","handleSelections","genreTitle","selectedIndex","indexOf","newGenres","concat","FormGroup_default","genreList","genre","components_GenreItem_GenreItem","BACKEND_ADDRESS","BACKEND_URL","HomePage","showProgressbar","fetchGenres","fetch","result","json","method","headers","Content-Type","body","JSON","stringify","components_SearchBar_SearchBar","bind","components_FilterButton_FilterButton","v","components_GenreSelection_GenreSelection","CircularProgress_default","size","components_ResultTable_ResultTable","observer","LoginPageNoRouter","_React$Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","email","isEmailInvalid","password","passwordErrorText","loginInProgess","validateEmail","assertThisInitialized","resetMailInvalid","onResetPasswordClick","onLoginClick","onEmailInputChanged","onPasswordInputChanged","onModalClose","passwordKeyPress","inherits","createClass","e","keyCode","test","isEmailValid","details","grant_type","username","sha256","client_id","client_secret","formBody","encodedKey","encodeURIComponent","encodedValue","Fragment","TextField_default","autoComplete","margin","width","error","onFocus","onBlur","helperText","onKeyUp","text","Button_default","top","left","position","zIndex","withRouter","HeaderAppBar","AppBar_default","Toolbar_default","IconButton_default","Menu_default","Typography_default","App","theme","createMuiTheme","palette","primary","indigo","secondary","main","typography","useNextVariants","BrowserRouter","Switch","exact","styles","components_HeaderAppBar_HeaderAppBar","Route","path","process","LoginPage","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d57f403e.chunk.js","sourcesContent":["import {observable, decorate, action} from 'mobx';\n\nexport const authenticationStore = observable({\n  userLevel: 0,\n  token: \"\",\n  setUserLevel: action((newVal) => authenticationStore.userLevel = newVal),\n  setToken: action((newVal) => authenticationStore.setToken = newVal),\n});\n\nclass DataStore {\n  title = null;\n  rating = null;\n  imdb = null;\n  year = null;\n  genres = null;\n  fsk = null;\n\n  setTitle(title) {\n    this.title = title;\n  }\n\n  setRating(rating) {\n    this.rating = rating;\n  }\n\n  setIMDb(imdb) {\n    this.imdb = imdb;\n  }\n\n  setYear(year) {\n    this.year = year;\n  }\n\n  setGenres(genres) {\n    this.genres = genres;\n  }\n\n  setFSK(fsk) {\n    this.fsk = fsk;\n  }\n}\n\ndecorate(DataStore, {\n  title: observable,\n  rating: observable,\n  imdb: observable,\n  year: observable,\n  genres: observable,\n  fsk: observable,\n  setTitle: action,\n  setRating: action,\n  setIMDb: action,\n  setYear: action,\n  setGenres: action,\n  setFSK: action,\n});\n\nexport const dataStore = new DataStore();","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {MenuItem, TextField} from \"@material-ui/core/es/index\";\nimport './FilterButton.css'\n\nclass FilterButton extends React.Component {\n\n  state = {\n    selection: ''\n  };\n\n  handleChange = event => {\n    this.setState({\n      selection: event.target.value\n    });\n    this.props.dataStoreAction(event.target.value);\n  };\n\n  render() {\n    return (\n      <TextField\n        select\n        className=\"filter-button\"\n        label={this.props.title}\n        value={this.state.selection}\n        onChange={this.handleChange}\n      >\n        <MenuItem key=\"none\" value={null}>\n          -Auswahl-\n        </MenuItem>\n        {this.props.children.map(name => (\n          <MenuItem key={name} value={name}>\n            {name}\n          </MenuItem>\n        ))}\n      </TextField>\n    );\n  }\n}\n\nFilterButton.propTypes = {\n  children: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  multiple: PropTypes.bool,\n  dataStoreAction: PropTypes.func.isRequired\n};\n\nexport default FilterButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {TextField, Button} from '@material-ui/core';\nimport Search from '@material-ui/icons/Search';\nimport {dataStore} from '../../stores';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n\n  handleTitleInput = event => {\n    let value = null;\n    if (event.target.value !== \"\") {\n      value = event.target.value;\n    }\n\n    dataStore.setTitle(value);\n  };\n\n  handleEnterKey = event => {\n    if (event.type === \"keydown\" && event.key === \"Enter\") {\n      this.props.onSearchClick();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"searchbar-container\">\n        <TextField\n          autoFocus\n          id=\"search\"\n          label=\"Film/Serien Titel\"\n          type=\"search\"\n          onChange={this.handleTitleInput}\n          onKeyDown={this.handleEnterKey}\n          className=\"searchbar-input\"\n        />\n        <Button\n          id=\"btnSearch\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={this.props.onSearchClick}\n          className=\"searchbar-button\"\n        >\n          <Search/>\n          Suche\n        </Button>\n      </div>\n    )\n  }\n}\n\nSearchBar.propTypes = {\n  onSearchClick: PropTypes.func.isRequired\n};\n\nexport default SearchBar;","function getRangeValues(start, end, steps, fraction = 1) {\r\n  let elements = [];\r\n  for (let i = start; i <= end; i += steps) {\r\n    elements.push(i.toFixed(fraction));\r\n  }\r\n  return elements;\r\n}\r\n\r\nexport const RATINGS = getRangeValues(1, 5, 0.5);\r\n\r\nexport const IMDB_RATINGS = getRangeValues(1, 10, 0.1);\r\n\r\nexport const YEARS = getRangeValues(1900, 2018, 1, 0);\r\n\r\nexport const FSK = [0, 6, 12, 16, 18];","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {TableCell, TableHead, TableRow, TableSortLabel, Tooltip} from \"@material-ui/core/es/index\";\r\n\r\nconst rows = [\r\n  {id: 'title', numeric: false, disablePadding: true, label: 'Titel'},\r\n  {id: 'rating', numeric: true, disablePadding: false, label: 'Bewertung (1.0 - 5.0)'},\r\n  {id: 'imdb', numeric: true, disablePadding: false, label: 'IMDb (1.0 - 10.0)'},\r\n  {id: 'year', numeric: true, disablePadding: false, label: 'Jahr'},\r\n  {id: 'genres', numeric: false, disablePadding: false, label: 'Genres'},\r\n  {id: 'fsk', numeric: false, disablePadding: false, label: 'FSK'},\r\n];\r\n\r\nclass ResultTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const {order, orderBy} = this.props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {rows.map(row => {\r\n            return (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.id ? order : false}\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={orderBy === row.id}\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            );\r\n          }, this)}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nResultTableHead.propTypes = {\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ResultTableHead;","function desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nexport function getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport ResultTableHead from './ResultTableHead'\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TablePagination,\n  TableRow,\n  Toolbar,\n  Typography\n} from \"@material-ui/core/es/index\";\nimport './ResultTable.css'\nimport {getSorting, stableSort} from \"../../utilities\";\n\nclass ResultTable extends React.Component {\n  state = {\n    order: 'asc',\n    orderBy: 'title',\n    page: 0,\n    rowsPerPage: 10,\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc';\n    }\n\n    this.setState({order, orderBy});\n  };\n\n  handleClick = (event, url) => {\n    window.open(url, \"_blank\");\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({page});\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({rowsPerPage: event.target.value});\n  };\n\n  render() {\n    const {order, orderBy, rowsPerPage, page} = this.state;\n    const data = this.props.data;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n      <Paper className=\"Result-Table\">\n        <Toolbar>\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            Suchergebnisse\n          </Typography>\n        </Toolbar>\n        <div className=\"table-wrapper\">\n          <Table className=\"table\" aria-labelledby=\"tableTitle\">\n            <ResultTableHead\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length}\n            />\n            <TableBody>\n              {stableSort(data, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(n => {\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => this.handleClick(event, n.url)}\n                      tabIndex={-1}\n                      key={n.movie_id}\n                    >\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        {n.title}\n                      </TableCell>\n                      <TableCell align=\"right\">{n.rating}</TableCell>\n                      <TableCell align=\"right\">{n.imdb}</TableCell>\n                      <TableCell align=\"right\">{n.year}</TableCell>\n                      <TableCell align=\"right\">{n.genres.join(', ')}</TableCell>\n                      <TableCell align=\"right\">{n.fsk}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{height: 49 * emptyRows}}>\n                  <TableCell colSpan={6}/>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\n\nResultTable.propTypes = {\n  data: PropTypes.array.isRequired\n};\n\nexport default ResultTable;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport './GenreItem.css'\r\n\r\nclass GenreItem extends React.Component {\r\n  state = {\r\n    selected: false\r\n  };\r\n\r\n  handleChange = () => {\r\n    this.setState({\r\n      selected: !this.state.selected\r\n    });\r\n    this.props.handleSelection(this.props.title);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={this.state.selected}\r\n            onChange={this.handleChange}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label={this.props.title}\r\n        className=\"genre-item\"\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nGenreItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  handleSelection: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GenreItem;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport GenreItem from \"../GenreItem/GenreItem\";\r\nimport './GenreSelection.css'\r\nimport {dataStore} from \"../../stores\";\r\n\r\nclass GenreSelection extends React.Component {\r\n\r\n  handleSelections = genreTitle => {\r\n    let genres = dataStore.genres;\r\n\r\n    if (genres === null) {\r\n      genres = [];\r\n    }\r\n    const selectedIndex = genres.indexOf(genreTitle);\r\n\r\n    let newGenres = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newGenres = newGenres.concat(genres, genreTitle);\r\n    } else if (selectedIndex === 0) {\r\n      newGenres = newGenres.concat(genres.slice(1));\r\n    } else if (selectedIndex === genres.length - 1) {\r\n      newGenres = newGenres.concat(genres.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newGenres = newGenres.concat(\r\n        genres.slice(0, selectedIndex),\r\n        genres.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    if (newGenres.length === 0) {\r\n      newGenres = null;\r\n    }\r\n\r\n    dataStore.setGenres(newGenres);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FormGroup row className=\"genre-wrapper\">\r\n        {this.props.genreList.map(genre => (\r\n          <GenreItem key={genre} title={genre} handleSelection={this.handleSelections}/>\r\n        ))}\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\nGenreSelection.propTypes = {\r\n  genreList: PropTypes.array.isRequired\r\n};\r\n\r\nexport default GenreSelection;","export const LOGIN_PATH = process.env.PUBLIC_URL + \"/Login\";\nexport const HOME_PATH = process.env.PUBLIC_URL + \"/\";\n\nconst BACKEND_URL = \"http://ec2-18-184-61-80.eu-central-1.compute.amazonaws.com\";\nconst BACKEND_PORT = \"8666\";\nexport const BACKEND_ADDRESS = BACKEND_URL + \":\" + BACKEND_PORT;","import React from 'react';\nimport {authenticationStore, dataStore} from '../../stores';\nimport {observer} from 'mobx-react';\nimport {FilterButton, SearchBar} from '../../components';\nimport './HomePage.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {IMDB_RATINGS, RATINGS, YEARS, FSK} from \"../../components/FilterButton/constants\";\nimport ResultTable from \"../../components/ResultTable/ResultTable\";\nimport {Paper, Toolbar, Typography} from \"@material-ui/core/es/index\";\nimport GenreSelection from \"../../components/GenreSelection/GenreSelection\";\nimport {BACKEND_ADDRESS} from \"../../app-config\";\n\nclass HomePage extends React.Component {\n\n  state = {\n    showProgressbar: false,\n    data: [],\n    genres: []\n  };\n\n  componentDidMount() {\n    this.fetchGenres();\n  }\n\n  async fetchGenres() {\n    const result = await fetch(BACKEND_ADDRESS + '/api/de/genres');\n    let genres = await result.json();\n\n    genres = genres.sort();\n\n    this.setState({\n      genres: genres\n    });\n  }\n\n  async onSearchClick() {\n    this.setState({showProgressbar: true});\n\n    const result = await fetch(\n      BACKEND_ADDRESS + \"/api/de/movies\", {\n        'method': 'post',\n        'headers': {\n          'Content-Type': 'application/json'\n        },\n        'body': JSON.stringify(dataStore)\n      });\n\n    const json = await result.json();\n\n    this.setState({\n      showProgressbar: false,\n      data: json\n    })\n  }\n\n  render() {\n    return (\n      <Paper className=\"Home-Page\">\n        <SearchBar onSearchClick={this.onSearchClick.bind(this)}/>\n        <Toolbar className=\"filter-wrapper\">\n          <Typography variant=\"h5\" color=\"inherit\" id=\"filterTitle\">\n            Filter\n          </Typography>\n        </Toolbar>\n        <div className=\"filter-wrapper\" aria-labelledby=\"filterTitle\">\n          <FilterButton title=\"Bewertung\" children={RATINGS} dataStoreAction={v => dataStore.setRating(v)}/>\n          <FilterButton title=\"IMDb\" children={IMDB_RATINGS} dataStoreAction={v => dataStore.setIMDb(v)}/>\n          <FilterButton title=\"Jahr\" children={YEARS} dataStoreAction={v => dataStore.setYear(v)}/>\n          <FilterButton title=\"FSK\" children={FSK} dataStoreAction={v => dataStore.setFSK(v)}/>\n        </div>\n        <Toolbar className=\"genre-wrapper\">\n          <Typography variant=\"h6\" color=\"inherit\" id=\"genreTitle\">\n            Genres\n          </Typography>\n        </Toolbar>\n        <GenreSelection aria-labelledby=\"genreTitle\"\n                        genreList={this.state.genres}/>\n        {\n          this.state.showProgressbar\n            ?\n            <CircularProgress size={100}/>\n            :\n            null\n        }\n        <ResultTable data={this.state.data}/>\n      </Paper>)\n  }\n}\n\nexport default observer(HomePage);","import React from 'react';\nimport {withRouter} from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {observer} from 'mobx-react';\nimport {authenticationStore} from '../../stores';\nimport {HOME_PATH} from '../../app-config';\nimport sha256 from 'sha256';\n\nimport './LoginPage.css'\n\nfunction getProgressStyle() {\n  // sets the modal into the mid of the screen\n  return {\n    top: '20%',\n    left: '47%',\n    position: 'absolute',\n    zIndex: 100\n  };\n}\n\nexport class LoginPageNoRouter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      isEmailInvalid: false,\n      password: \"\",\n      passwordErrorText: \"\",\n      loginInProgess: false\n    };\n\n    this.validateEmail = this.validateEmail.bind(this);\n    this.resetMailInvalid = this.resetMailInvalid.bind(this);\n    this.onResetPasswordClick = this.onResetPasswordClick.bind(this);\n    this.onLoginClick = this.onLoginClick.bind(this);\n    this.onEmailInputChanged = this.onEmailInputChanged.bind(this);\n    this.onPasswordInputChanged = this.onPasswordInputChanged.bind(this);\n    this.onModalClose = this.onModalClose.bind(this);\n    this.passwordKeyPress = this.passwordKeyPress.bind(this);\n  }\n\n  passwordKeyPress(e) {\n    const keyCode = e.keyCode;\n    if (keyCode === 13) {//Enter\n      this.onLoginClick();\n    }\n  }\n\n  isEmailValid(email) {\n    // http://emailregex.com\n    const isEmailValidRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return isEmailValidRegex.test(email);\n  }\n\n  validateEmail(event) {\n    if (event.target.value !== \"\") {\n      this.setState({\n        isEmailInvalid: !this.isEmailValid(event.target.value),\n      })\n    }\n  }\n\n  resetMailInvalid() {\n    this.setState({isEmailInvalid: false});\n  }\n\n  onEmailInputChanged(event) {\n    this.setState({\n      email: event.target.value\n    })\n  }\n\n  onPasswordInputChanged(event) {\n    if (this.state.email) {\n      this.setState({\n        password: event.target.value\n      })\n    }\n  }\n\n  onResetPasswordClick() {\n    if (this.state.loginInProgess) {\n      return;\n    }\n    if (this.state.email === \"\" || this.state.isEmailInvalid) {\n      //this.displayPopup(\"Eingabe ungültig\", \"Bitte gültige E-Mail Adresse eingeben\")\n    } else {\n      this.setState({loginInProgess: true});\n\n      //TODO: Fetch login\n\n    }\n  }\n\n  onLoginClick() {\n    if (this.state.loginInProgess) {\n      return;\n    }\n    if (this.state.email === \"\" || this.state.isEmailInvalid || this.state.password === \"\") {\n      //TODO: PopUp\n    } else {\n      this.setState({loginInProgess: true});\n      let details = {\n        'grant_type': 'password',\n        'username': this.state.email,\n        'password': sha256(this.state.password),\n        'client_id': null,\n        'client_secret': null\n      };\n      let formBody = [];\n      for (let property in details) {\n        let encodedKey = encodeURIComponent(property);\n        let encodedValue = encodeURIComponent(details[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n      }\n      formBody = formBody.join(\"&\");\n      this.setState({loginInProgess: true});\n      // fetch(USER_TOKEN_PATH,\n      //   {\n      //     method: 'post',\n      //     headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      //     body: formBody\n      //   })\n      //   .then(response => {\n      //     if (response && response.status === 200) {\n      //       return response.json()\n      //     }\n      //   })\n      //   .then(json => {\n      //     if (json) {\n      //       const bearerToken = json.access_token;\n      //       authenticationStore.token = bearerToken;\n      //       // Login\n      //       fetch(USER_LOGIN_PATH,\n      //         {\n      //           method: 'get',\n      //           headers: {\n      //             'Content-Type': 'application/json',\n      //             'Authorization': \"Bearer \" + bearerToken\n      //           },\n      //         })\n      //         .then(response => {\n      //           this.setState({loginInProgess: false});\n      //           return response.json()\n      //         })\n      //         .then(json => {\n      //           this.setState({loginInProgess: false});\n      //           if (json && json.loginStatus === \"success\") {\n      //             authenticationStore.setUserLevel(json.authorityLevel);\n      //             this.props.history.push(HOME_PATH);\n      //\n      //           } else {\n      //             //this.displayPopup(\"Fehler\", \"Login fehlgeschlagen!\")\n      //           }\n      //         })\n      //         .catch(message => {\n      //           this.setState({loginInProgess: false});\n      //           console.error(\"Fehler\", \"\" + message)\n      //         })\n      //     } else {\n      //       this.setState({loginInProgess: false});\n      //       //this.displayPopup(\"Fehler\", \"Login ungültig\")\n      //     }\n      //   })\n      //   .catch(message => {\n      //     this.setState({loginInProgess: false});\n      //     //this.displayPopup(\"Fehler\", \"\" + message);\n      //   })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"Login-Page\">\n          <form>\n            <TextField\n              autoFocus\n              id=\"email\"\n              autoComplete='email'\n              label=\"E-Mail Adresse\"\n              margin=\"normal\"\n              style={{width: '30em'}}\n              onChange={this.onEmailInputChanged}\n              error={this.state.isEmailInvalid}\n              onFocus={this.resetMailInvalid}\n              onBlur={this.validateEmail}\n              helperText={this.state.isEmailInvalid ? \"Ungültige E-Mail Adresse\" : null}\n            />\n            <br/>\n            <TextField\n              id=\"password\"\n              label=\"Passwort\"\n              type=\"password\"\n              margin=\"normal\"\n              autoComplete=\"true\"\n              style={{width: '30em'}}\n              onChange={this.onPasswordInputChanged}\n              onKeyUp={this.passwordKeyPress}\n              text={this.state.password}\n            />\n            <br/>\n            <Button\n              variant=\"contained\"\n              margin=\"normal\"\n              className=\"button\"\n              style={{width: '30em'}}\n              onClick={this.onLoginClick}\n            >\n              Login\n            </Button>\n            <br/>\n            <Button\n              variant=\"contained\"\n              margin=\"normal\"\n              className=\"button\"\n              style={{width: '30em'}}\n              onClick={this.onResetPasswordClick}\n            >\n              Passwort zurücksetzen\n            </Button>\n          </form>\n        </div>\n        {\n          this.state.loginInProgess\n            ?\n            <CircularProgress size={100} style={getProgressStyle()}/>\n            :\n            null\n        }\n      </React.Fragment>\n    )\n  }\n\n}\n\nexport default withRouter(observer(LoginPageNoRouter));","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport './HeaderAppBar.css'\r\n\r\n//TODO: Add functions for login and menu\r\n\r\nclass HeaderAppBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Header-App-Bar\">\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton className=\"menu-button\" color=\"inherit\" aria-label=\"Menu\">\r\n              <MenuIcon/>\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\r\n              {this.props.title}\r\n            </Typography>\r\n            <Button color=\"inherit\">Login</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeaderAppBar.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default HeaderAppBar;","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport {HomePage, LoginPage} from './pages';\nimport {observer} from 'mobx-react';\nimport {LOGIN_PATH, HOME_PATH} from './app-config';\nimport './App.css';\nimport HeaderAppBar from \"./components/HeaderAppBar/HeaderAppBar\";\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\nimport {indigo} from '@material-ui/core/colors';\n\nclass App extends Component {\n\n  theme = createMuiTheme({\n    palette: {\n      primary: indigo,\n      secondary: {\n        main: '#fb8c00',\n      },\n    },\n    typography: {\n      useNextVariants: true,\n    },\n  });\n\n  render() {\n    return (\n      <React.Fragment>\n        <BrowserRouter>\n          <Switch exact>\n            <MuiThemeProvider theme={this.theme}>\n              <div className=\"App\">\n                <HeaderAppBar title=\"v-search\"/>\n                <Route exact path={HOME_PATH} component={HomePage}/>\n                <Route exact path={LOGIN_PATH} component={LoginPage}/>\n                {this.props.children}\n              </div>\n            </MuiThemeProvider>\n          </Switch>\n        </BrowserRouter>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}